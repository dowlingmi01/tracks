{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldowling/tracks/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { loginUser, registerUser } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize user state from localStorage\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (error) {\n      console.error('Error parsing stored user:', error);\n      return null;\n    }\n  });\n  const [loading, setLoading] = useState(true);\n  const login = async credentials => {\n    try {\n      console.log('Attempting login with:', {\n        email: credentials.email\n      });\n      const response = await loginUser(credentials.email, credentials.password);\n      console.log('Login response data:', response);\n\n      // Now we should have direct access to token and user\n      const {\n        token,\n        user\n      } = response.data;\n      if (user) {\n        localStorage.setItem('auth_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n        console.log('Login successful - stored user:', user);\n      }\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  const logout = useCallback(() => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user');\n    setUser(null);\n  }, []);\n  const isSuperAdmin = useCallback(() => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'SUPERADMIN';\n  }, [user]);\n  const isAdmin = useCallback(() => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'ADMIN';\n  }, []);\n\n  // Initialize auth state\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    const storedUser = localStorage.getItem('user');\n    if (token && storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        logout();\n      }\n    }\n    setLoading(false);\n  }, [logout]);\n\n  // Debug user state changes\n  useEffect(() => {\n    console.log('User state updated:', user);\n    console.log('Is SuperAdmin:', (user === null || user === void 0 ? void 0 : user.role) === 'SUPERADMIN');\n  }, [user]);\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user,\n    isSuperAdmin,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"0LvTHbGxzaBxbCcTP2GinxQHy5M=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useCallback","loginUser","registerUser","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","error","console","loading","setLoading","login","credentials","log","email","response","password","token","data","setItem","stringify","logout","removeItem","isSuperAdmin","role","isAdmin","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/michaeldowling/tracks/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// src/contexts/AuthContext.js\nimport React, { createContext, useState, useContext, useEffect, useCallback } from 'react';\nimport { loginUser, registerUser } from '../services/auth';\n\nexport const AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  // Initialize user state from localStorage\n  const [user, setUser] = useState(() => {\n    try {\n      const storedUser = localStorage.getItem('user');\n      return storedUser ? JSON.parse(storedUser) : null;\n    } catch (error) {\n      console.error('Error parsing stored user:', error);\n      return null;\n    }\n  });\n  const [loading, setLoading] = useState(true);\n\n  const login = async (credentials) => {\n    try {\n      console.log('Attempting login with:', { email: credentials.email });\n      const response = await loginUser(credentials.email, credentials.password);\n      console.log('Login response data:', response);\n      \n      // Now we should have direct access to token and user\n      const { token, user } = response.data;\n      \n      if (user) {\n        localStorage.setItem('auth_token', token);\n        localStorage.setItem('user', JSON.stringify(user));\n        setUser(user);\n        \n        console.log('Login successful - stored user:', user);\n      }\n      \n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n\n  const logout = useCallback(() => {\n    localStorage.removeItem('auth_token');\n    localStorage.removeItem('user');\n    setUser(null);\n  }, []);\n\n  const isSuperAdmin = useCallback(() => {\n    return user?.role === 'SUPERADMIN';\n  }, [user]);\n\n  const isAdmin = useCallback(() => {\n    return user?.role === 'ADMIN';\n  }, []);\n\n  // Initialize auth state\n  useEffect(() => {\n    const token = localStorage.getItem('auth_token');\n    const storedUser = localStorage.getItem('user');\n    \n    if (token && storedUser) {\n      try {\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Error parsing stored user:', error);\n        logout();\n      }\n    }\n    setLoading(false);\n  }, [logout]);\n\n  // Debug user state changes\n  useEffect(() => {\n    console.log('User state updated:', user);\n    console.log('Is SuperAdmin:', user?.role === 'SUPERADMIN');\n  }, [user]);\n\n  const value = {\n    user,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user,\n    isSuperAdmin,\n    isAdmin\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}