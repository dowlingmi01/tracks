{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldowling/tracks/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// frontend/src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check for stored token and validate it\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Validate token and set user\n      validateToken(token);\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  const validateToken = async token => {\n    try {\n      const response = await fetch('/api/auth/validate', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      } else {\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n    }\n    setIsLoading(false);\n  };\n  const register = async (name, email, password) => {\n    const response = await fetch('/api/auth/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message);\n    }\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n    setUser(data.user);\n  };\n  const login = async (email, password) => {\n    const response = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message);\n    }\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n    setUser(data.user);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YajQB7LURzRD+QP5gw0+K2TZIWA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","token","localStorage","getItem","validateToken","response","fetch","headers","Authorization","ok","data","json","removeItem","error","register","name","email","password","method","body","JSON","stringify","Error","message","setItem","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","undefined","$RefreshReg$"],"sources":["/Users/michaeldowling/tracks/frontend/src/contexts/AuthContext.js"],"sourcesContent":["// frontend/src/contexts/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Check for stored token and validate it\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Validate token and set user\n      validateToken(token);\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const validateToken = async (token) => {\n    try {\n      const response = await fetch('/api/auth/validate', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setUser(data.user);\n      } else {\n        localStorage.removeItem('token');\n      }\n    } catch (error) {\n      localStorage.removeItem('token');\n    }\n    setIsLoading(false);\n  };\n\n  const register = async (name, email, password) => {\n    const response = await fetch('/api/auth/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name, email, password })\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message);\n    }\n\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n    setUser(data.user);\n  };\n\n  const login = async (email, password) => {\n    const response = await fetch('/api/auth/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email, password })\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message);\n    }\n\n    const data = await response.json();\n    localStorage.setItem('token', data.token);\n    setUser(data.user);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, register, logout, isLoading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}